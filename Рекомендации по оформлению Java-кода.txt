ОБЩИЕ
1. Не превышайте длину строки - при превышении просто перенесите на следующую строку.
2. Не забывайте использовать try-with-resources
3. Для порядка исполнения используйте try...finally
4. Для минимизации кода обязательно используем библиотеку Lombok
5. Не сворачивайте импорты, это затрудняет понимание, какой пласс был использован
6. Для логирования используйте аннотацию библиотеки Lombok (например, @Slf4j).
7. Название классов с большой буквы
8. Название полей, методов, переменных в camelCase
9. Не забывайте использовать прелести Java 1.8

JAVA 1.8
1. Лямбда-выражения
2. Контейнер Optional
3. Stream API

ИСКЛЮЧЕНИЯ
1. Никогда не перехватывайте и не игнорируйте их без объяснения.
2. Не используйте обобщенные исключения, кроме кода в библиотеках, в корне стека.

ИМПОРТЫ
1. Не сворачивайте импорты, это затрудняет понимание, какой пласс был использован

ГЕТТЕРЫ и СЕТТЕРЫ
1. Для минимизации кода обязательно используем библиотеку Lombok

ЛОГГИРОВАНИЕ
1. Для логирования используйте аннотацию библиотеки Lombok (например, @Slf4j).

АББРЕВИАТУРЫ
1. Хорошо: xmlHttpRequest (для название класса XmlHttpRequest), не использовать XMLHTTPRequest
2. Хорошо: userDto (для класса UserDto), не использовать UserDTO

КЛАССЫ, ПОЛЯ И МЕТОДЫ
1. Поля класса должны быть вверху класса, причем сначала идут статичные поля.
2. Поля класса все private. Для геттеров и сеттеров используйте Lombok @Getter @Setter
3. Именуйте поля и методы так, чтобы было понятно, что содержит поле или делает метод.
4. Если в методе аргументы не помещяются в одну строку, то каждый аргумент начинайте с новой строки.
5. Отдавайте предпочтение коротким методам, которые решают одну задачу. Если метод получается большой, то попробуйте
разбить его на несколько.
6. Обязательно пишите Javadoc над классами, методами и полями, поскольку с кодом который Вы пишете, будете работать
не только Вы сами.

JAVADOC
1. Обязательно пишите Javadoc над классами, методами и полями, поскольку с кодом который Вы пишете, будете работать
не только Вы сами.

TODO
1. Используйте стиль TODO: «TODO: пишите описание здесь» для отмечания мест доработок в коде.
